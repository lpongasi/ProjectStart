// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProjectStart.Commerce;
using System;

namespace ProjectStart.WebApp.Migrations
{
    [DbContext(typeof(CommerceContext))]
    [Migration("20170901084224_Commerce_20170901164203")]
    partial class Commerce_20170901164203
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Node", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime?>("DateRemoved");

                    b.Property<bool>("IsRemoved");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long?>("ParentNodeId");

                    b.Property<string>("RemovedBy");

                    b.HasKey("Id");

                    b.HasIndex("ParentNodeId");

                    b.ToTable("Node");
                });

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(8,4)");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime?>("DateRemoved");

                    b.Property<bool>("IsRemoved");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("RemovedBy");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime?>("ValidTo");

                    b.Property<long>("VarianceId");

                    b.HasKey("Id");

                    b.HasIndex("VarianceId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime?>("DateRemoved");

                    b.Property<string>("Description");

                    b.Property<bool>("IsRemoved");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("NodeId");

                    b.Property<string>("RemovedBy");

                    b.HasKey("Id");

                    b.HasIndex("NodeId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Variance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime?>("DateRemoved");

                    b.Property<bool>("IsRemoved");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("ProductId");

                    b.Property<string>("RemovedBy");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Variance");
                });

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Node", b =>
                {
                    b.HasOne("ProjectStart.Commerce.Entity.Node", "ParentNode")
                        .WithMany("SubNodes")
                        .HasForeignKey("ParentNodeId");
                });

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Price", b =>
                {
                    b.HasOne("ProjectStart.Commerce.Entity.Variance", "Variance")
                        .WithMany("Price")
                        .HasForeignKey("VarianceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Product", b =>
                {
                    b.HasOne("ProjectStart.Commerce.Entity.Node", "Node")
                        .WithMany("Products")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectStart.Commerce.Entity.Variance", b =>
                {
                    b.HasOne("ProjectStart.Commerce.Entity.Product", "Product")
                        .WithMany("Variance")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
